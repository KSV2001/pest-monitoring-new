# @package _global_

# to execute this experiment run:
# python run.py experiment=default.yaml

seed: 12345

hydra:
  run:
    dir: /output/${hydra.job.config_name}

trainer:
  _target_: pytorch_lightning.Trainer
  gpus: 0
  min_epochs: 1
  max_epochs: 100
  gradient_clip_val: 0.5
  limit_train_batches: 0.01
  limit_val_batches: 0.1
  accumulate_grad_batches: 2
  weights_summary: null

model:
  _target_: src.models.coco.Model
  type: "ssd"
  network:
    _target_: src.networks.ssd.SSD
    num_classes: 81
  optimizer:
    _target_: torch.optim.SGD
    lr: 0.01
    momentum: 0.9
  loss:
    _target_: src.loss.Loss
  metrics:


datamodule:
  _target_: src.data.COCO.datamodule.COCODetectionDataModule
  type: "ssd"
  num_workers: 10
  batch_size: 32
  shuffle: True
  drop_last: True
  pin_memory: True
  dataset:
    _target_: src.data.COCO.dataset.COCODataset
    root: "/data/coco2014/raw/"

callbacks:
  model_checkpoint:
    _target_: pytorch_lightning.callbacks.ModelCheckpoint
    monitor: "train/loss"
    mode: "max"
    dirpath: "checkpoints/"
    filename: "sample-mnist-{epoch:02d}"

logger:
  wandb:
    _target_: pytorch_lightning.loggers.wandb.WandbLogger
    project: "pest-monitoring-new"
    notes: "Description of this model."
    save_dir: "/output/"
